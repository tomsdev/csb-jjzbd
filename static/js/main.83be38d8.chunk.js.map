{"version":3,"sources":["index.js"],"names":["templateHandler","TemplateHandler","arrayToMap","results","commonColKeys","data","reduce","mapAccumulator","row","key","map","col","join","set","Map","_callee","merged","docx","count","setCount","setLoading","zip","i","_iterator","_step","_step$value","blob","fileName","_tmp_deploys_jjzbd_cknkb632n025h0umj84n03uq2_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","console","log","JSZip","Object","_tmp_deploys_jjzbd_cknkb632n025h0umj84n03uq2_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__","s","n","done","_tmp_deploys_jjzbd_cknkb632n025h0umj84n03uq2_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","value","process","sent","file","concat","binary","abrupt","t0","e","f","finish","generateAsync","type","then","saveAs","name","split","size","stop","useCsv","_useState","useState","_useState2","setValue","Papa","parse","header","complete","App","_useCsv","_useCsv2","csv","loadCsvFile","_useCsv3","_useCsv4","csv2","loadCsvFile2","_useState3","_useState4","csvMerged","setCsvMerged","_useState5","_useState6","setCommonColKeys","_useState7","_useState8","setDocx","_useState9","_useState10","_useState11","_useState12","loading","useEffect","b","forEach","aVal","bVal","get","assign","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","className","method","action","htmlFor","accept","onChange","target","files","min","max","disabled","style","backgroundColor","onClick","generateDocuments","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.83be38d8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Papa from \"papaparse\";\nimport { TemplateHandler } from \"easy-template-x\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nimport \"./styles.css\";\n\nconst templateHandler = new TemplateHandler();\n\nfunction arrayToMap(results, commonColKeys) {\n  return results.data.reduce((mapAccumulator, row) => {\n    const key = commonColKeys.map((col) => row[col]).join(\"\");\n    mapAccumulator.set(key, row);\n    return mapAccumulator;\n  }, new Map());\n}\n\nasync function generateDocuments(\n  merged,\n  commonColKeys,\n  docx,\n  count,\n  setCount,\n  setLoading\n) {\n  console.log(docx);\n  setLoading(true);\n  const zip = JSZip();\n  let i = count;\n\n  for (var [key, row] of merged) {\n    const blob = await templateHandler.process(docx, row);\n    const fileName = commonColKeys.map((col) => row[col]).join(\"_\");\n    // Add file to the zip.\n    zip.file(`${fileName}.docx`, blob, {\n      binary: true\n    });\n    i--;\n    setCount(i);\n    if (i <= 0) {\n      break;\n    }\n  }\n\n  zip.generateAsync({ type: \"blob\" }).then(function (blob) {\n    saveAs(blob, `${docx.name.split(\".\")[0]}_documents.zip`);\n    setLoading(false);\n    setCount(merged.size);\n  });\n}\n\nfunction useCsv() {\n  const [value, setValue] = useState(null);\n\n  const loadCsvFile = (file) =>\n    Papa.parse(file, {\n      header: true,\n      complete: setValue\n    });\n\n  return [value, loadCsvFile];\n}\n\nfunction App() {\n  const [csv, loadCsvFile] = useCsv();\n  const [csv2, loadCsvFile2] = useCsv();\n  const [csvMerged, setCsvMerged] = useState();\n  const [commonColKeys, setCommonColKeys] = useState();\n  const [docx, setDocx] = useState();\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!csv || !csv2 || !commonColKeys) {\n      return;\n    }\n    let a = arrayToMap(csv, commonColKeys);\n    let b = arrayToMap(csv2, commonColKeys);\n\n    let merged = new Map();\n    a.forEach((aVal, key) => {\n      const bVal = b.get(key);\n      merged.set(key, Object.assign({}, aVal, bVal));\n    });\n    console.log(\"merged csv files:\");\n    console.log(merged);\n\n    setCsvMerged(merged);\n    setCount(merged.size);\n  }, [csv, csv2, commonColKeys, setCount]);\n\n  return (\n    <div className=\"App\">\n      <form method=\"get\" action=\"#\">\n        <fieldset>\n          <label htmlFor=\"csv\">\n            Fichier tableau au format CSV qui contient une ligne par document a\n            generer\n          </label>\n          <input\n            name=\"csv\"\n            type=\"file\"\n            accept=\"text/csv, .csv\"\n            onChange={(e) => loadCsvFile(e.target.files[0])}\n          />\n          <label htmlFor=\"csv2\">\n            Fichier tableau au format CSV qui contient des colonnes\n            supplementaires\n          </label>\n          <input\n            name=\"csv2\"\n            type=\"file\"\n            accept=\"text/csv, .csv\"\n            onChange={(e) => loadCsvFile2(e.target.files[0])}\n          />\n          <label htmlFor=\"colonnes\">\n            Noms des colonnes qui sont les meme dans les classeurs (separer par\n            des virgules, exemple: Noms,Prenoms)\n          </label>\n          <input\n            name=\"colonnes\"\n            type=\"text\"\n            onChange={(e) => setCommonColKeys(e.target.value.split(\",\"))}\n          />\n          <label htmlFor=\"modele\">\n            Fichier de modele Word format .docx pour generer les documents\n          </label>\n          <input\n            name=\"modele\"\n            type=\"file\"\n            accept=\"application/msword, .docx, .doc\"\n            onChange={(e) => setDocx(e.target.files[0])}\n          />\n          <label htmlFor=\"modele\">Nombres de documents a generer</label>\n          <input\n            name=\"count\"\n            type=\"number\"\n            min=\"1\"\n            max=\"10000\"\n            onChange={(e) => setCount(e.target.value)}\n          />\n          <br />\n          <button\n            type=\"submit\"\n            disabled={loading}\n            style={{ backgroundColor: loading ? \"red\" : \"green\" }}\n            onClick={() =>\n              generateDocuments(\n                csvMerged,\n                commonColKeys,\n                docx,\n                count,\n                setCount,\n                setLoading\n              )\n            }\n          >\n            Generer {count} documents\n          </button>\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}